name: "ArrangoDB Test"

on:
  pull_request: ~


jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      arangodb:
        image: arangodb:latest
        env:
          ARANGO_NO_AUTH: 1
        ports:
          # Maps port 6379 on service container to the host
          - 8529:8529
        options: >-
          --health-cmd "arangodb version"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: 1.21
      - run: |
          go version
          go install github.com/golang/mock/mockgen@latest
          go install github.com/jstemmer/go-junit-report@latest
          go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@latest
          go install github.com/boumenot/gocover-cobertura@latest
          echo "hello world"
      - name: Run tests
        run: |
          set -euo pipefail
          go test -json -v -coverprofile=coverage.txt ./... 2>&1 | tee /tmp/gotest.log | gotestfmt
          gocover-cobertura < coverage.txt > coverage.xml
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          format: markdown
          output: both
          thresholds: '20 80'
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md